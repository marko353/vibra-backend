const { Schema, model } = require("mongoose");

// DefiniÅ¡emo Mongoose Å¡emu za korisnika
const UserSchema = new Schema(
Â  {
Â  Â  // Osnovni podaci o autentifikaciji
Â  Â  username: { type: String, unique: true },
Â  Â  email: { type: String, required: true, unique: true },
Â  Â  password: { type: String },
Â  Â  fullName: { type: String },
Â  Â  birthDate: { type: Date },
Â  Â  googleId: { type: String },
Â  Â  isAdmin: { type: Boolean, default: false },

Â  Â  // Podaci za profilne slike
Â  Â  profilePictures: { type: [String], default: [] },
Â  Â  avatar: { type: String },

Â  Â  // Podaci za "kartice" profila
Â  Â  bio: { type: String, default: null },
Â  Â  relationshipType: { type: String, default: null },
Â  Â  interests: { type: [String], default: [] },
Â  Â  height: { type: Number, default: null },
Â  Â  languages: { type: [String], default: [] },
Â  Â  horoscope: { type: String, default: null },
Â  Â  familyPlans: { type: String, default: null },
Â  Â  communicationStyle: { type: String, default: null },
Â  Â  loveStyle: { type: String, default: null },
Â  Â  pets: { type: String, default: null },
Â  Â  drinks: { type: String, default: null },
Â  Â  smokes: { type: String, default: null },
Â  Â  workout: { type: String, default: null },
Â  Â  diet: { type: String, default: null },
Â  Â  jobTitle: { type: String, default: null },
Â  Â  education: { type: [String], default: [] },
    
    // Podaci o lokaciji
Â  Â  location: {
Â  Â  Â  type: Object,
Â  Â  },
Â  Â  showLocation: { type: Boolean, default: false },

    // ðŸ‘‡ DODATO POLJE ðŸ‘‡
    hasCompletedLocationPrompt: {
        type: Boolean,
        default: false
    },

Â  Â  gender: { type: String, default: null },
Â  Â  sexualOrientation: { type: String, default: null },

Â  Â  // Swipe logika
Â  Â  likes: [{ type: Schema.Types.ObjectId, ref: "User" }],
Â  Â  dislikes: [{ type: Schema.Types.ObjectId, ref: "User" }],
    matches: [{ type: Schema.Types.ObjectId, ref: "User" }], // Dodao sam i matches, verovatno treba

Â  Â  // Tokeni i timestampovi
Â  Â  resetPasswordToken: { type: String },
Â  Â  resetPasswordExpires: { type: Date },
Â  },
Â  {
Â  Â  timestamps: true,
Â  }
);

// Direktno eksportujemo model
module.exports = model("User", UserSchema);